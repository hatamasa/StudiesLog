第５章曲げるか壊すか

■26　結合度の最小化とデメテルの法則
＠結合度を最小にする
恥ずかしがりやなコードを記述すること
⇒自分自身を他に明らかにしない。あまり多くの人と対話しない。

■27　メタプログラミング
システム設定を変更できるようにする
⇒アルゴリズムの選択、データベース製品、ミドルウェア技術、インターフェイススタイル

メタデータを使う
⇒チューニングパラメータ、ユーザプレファレンス、インストールディレクトリ

メタデータとは「データに関するデータ」
＠抽象概念はコード上に、詳細はメタデータ上に置くこと
⇒設計を分離することができ、より柔軟で適応性の高いプログラムを作ることが出来る
　再コンパイルせずにカスタマイズ可能

■28　時間的な結合
並列性を考慮する
⇒ワークフローを分析する
UMLアクティビティ図（並行作業と順序だてる作業が一目でわかる）

＠常に並列性を意識した設計を行うこと

■29　単なる見かけ

MVC設計
⇒表示を行うビューとそれを管理するコントローラーからモデルを分離すること
　同じデータモデルを使って複数のビューをサポートすることができるようになる
モデルとビュー/コントローラーの結合度を低くすることで柔軟性を高めることができる

■30　ホワイトボード
＠近代版分散ホワイトボードシステム
JavaSpace , T Space
⇒オブジェクトそれぞれを完全に分離し、知識の消費者側と生産者側が匿名、かつ非同期にデータを交換できるフォーラムを提供するもの



【継続的インテグレーション環境構築】

■目的
GitHubレポジトリにあるモジュールと連携、
ビルド・テストを自動化し、
テスト、ビルド時に必要とする人員を最適化し、モジュールの品質向上を目指す。

■構築手順
①GitHub環境、Jenkins環境構築
eclipse、SourceTree、GitHub、glassfish、maven、PostgresSQL、oracle(?)等ローカル環境設定

・ローカルにレポジトリを構築できること
・mvn --version　コマンドが通ること、mvn cleanなどのコマンドが通ること
・Jenkins環境にアクセスできること

②JenkinsとGitHubレポジトリの連携
１、maven、シェルのビルドコマンド作成
２、PL/SQLのテスト作成（正常終了、異常終了で何か値を戻してシェルで判別）
３、JenkinsにJobを登録

・ビルド・テストを要件通り実行できること

■構築手順（ローカル）
①windows環境用にsetup.exeをＤＬしてきてインストール
┗デフォルトのProgrem Files以外に設定

②http://localhost:<port>に公開される
┗8080は競合すると思うのでJenkinsインストールディレクトリ直下にあるjenkins.xmlを編集してポート番号を変える
<arguments>-Xrs -Xmx256m -Dhudson.lifecycle=hudson.lifecycle.WindowsServiceLifecycle -jar "%BASE%\jenkins.war" --httpPort=8080</arguments>

③JenkinsにJobを設定する
┗http://localhost:<port>トップページの左上「新規ジョブ作成」より作成する
┗ソースコード管理、ビルドトリガ、ビルド等を設定する
┗ビルド時にバッチやシェルを実行させるときは$[jenkins_home}\jobs\${Job名}\workspace配下にバッチを置き、workspaceからの相対パスを設定する
┗Topページ「jenkinsの管理」より「プラグインの管理」→「高度な設定」にてプロキシの設定をする
